<Page x:Class="COM_Ports_Communication.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:COM_Ports_Communication.Views"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:vm="clr-namespace:COM_Ports_Communication.ViewModels"
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="500"
      MinHeight="350" MinWidth="500"
      Title="MainPage">
   
    <Page.DataContext>
        <vm:MainPageViewModel/>
    </Page.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="60"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="340"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*" MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <TextBox Text="{Binding ReceivedData, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"  Margin="4,4,0,0" />
                </ScrollViewer>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <!--ProgressBar Grid.Column="0" x:Name="Progress" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch"  Height="10" Margin="5" Visibility="Hidden"/-->
                    <Button Command="{Binding ClearButtonClick}"
                            IsEnabled="{Binding CanClear, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                            Content="Clear"
                            Padding="5,0"
                            HorizontalAlignment="Left"
                            Height="20"
                            Margin="5,0"/>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Command="{Binding ContinuousReading_Click}"
                                IsEnabled="{Binding CanReadContinuously, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                Padding="5,0"
                                Height="20"
                                Margin="5,0"
                                Content="{Binding ContinuousButton_text}">
                        </Button>
                        <Button Command="{Binding ReadDataClick}"
                                IsEnabled="{Binding CanReadLine, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                Content="Read Line"
                                Padding="5,0"
                                Margin="5,0"
                                Height="20"/>
                        <TextBox Style="{StaticResource TextBoxWithPlaceholder}"
                                 Text="{Binding Timeout,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                 IsEnabled="{Binding CanSetTimeout}"
                                 Tag="Timeout ms"
                                 Height="20"
                                 Width="70"
                                 Margin="5,0"
                                 Padding="5,0"
                                 TextAlignment="Center"/>
                    </StackPanel>
                </Grid>
            </Grid>
            <GridSplitter Grid.Column="1"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Stretch"
                          Background="Transparent" 
                          ShowsPreview="False"
                          Width="4"/>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <TextBox Text="{Binding SendingData,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="0,4,4,0"/>
                </ScrollViewer>
                <Grid Margin="3" Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <!--ProgressBar Grid.Column="0" x:Name="SendProgress" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch"  Height="10" Margin="5" Visibility="Hidden"/-->
                    <Button Grid.Column="1"
                            Command="{Binding SendDataButtonClick}"
                            IsEnabled="{Binding CanSendData, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                            Content="Send data"
                            HorizontalAlignment="Right"
                            Height="20"
                            Padding="5,0"/>
                </Grid>
            </Grid>
        </Grid>
        <Grid Grid.Row="1">
            <StackPanel VerticalAlignment="Bottom">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Label Content="Port" Margin="5,0"/>
                    <ComboBox ItemsSource="{Binding Path=PortList}"
                              IsEnabled="{Binding CanSelectPort, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                              SelectedValue="{Binding SelectedPort, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                              MinWidth="100"
                              Height="20"
                              >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding ConnectionSettingSelected}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>

                    <Label Content="Bound Rate" Margin="20,0,5,0"/>
                    <ComboBox ItemsSource="{Binding Path=BoundRates}"
                              SelectedValue="{Binding SelectedBoundRate, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                              IsEnabled="{Binding CanSelectBoundRate, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                              MinWidth="100"
                              Height="20">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding ConnectionSettingSelected}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <Button Command="{Binding OpenPortButtonClick}"
                            Content="Open Port"
                            Margin="40,0,5,0" Height="20" Padding="5,0"
                            IsEnabled="{Binding CanOpenPort, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Command="{Binding ClosePortButtonClick}"
                            Content="Close Port"
                            Margin="0,0,5,0" Height="20" Padding="5,0"
                            IsEnabled="{Binding CanClosePort, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <Grid Height="20">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                        <Label Content="Status:" FontSize="10" VerticalAlignment="Center" Padding="0,0,0,2"/>
                        <Border BorderBrush="Black"
                                BorderThickness="0.6"
                                VerticalAlignment="Center"
                                CornerRadius="10"
                                Width="10" Height="10"
                                Margin="5"
                                Background="{Binding StatusColor, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </Grid>
    </Grid>
</Page>